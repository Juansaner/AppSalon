@use 'variables' as v;
@use 'sass:color';

/** Media Queries **/
@mixin telefono {
    @media (min-width: v.$telefono) {
        @content;
    }
}
@mixin tablet {
    @media (min-width: v.$tablet) {
        @content;
    }
}
@mixin desktop {
    @media (min-width: v.$desktop) {
        @content;
    }
}


@mixin boton($topColor, $bottomColor, $colorTexto) {
    display: inline-block;
    padding: 1.5rem 4rem;
    color: $colorTexto;
    font-size: 1.6rem;
    font-weight: 700;
    text-align: center;
    border: none;
    width: 100%;
    margin: 5rem 0;
    border-radius: 1rem;
    cursor: pointer;
    overflow: hidden;
    background: linear-gradient(180deg, $topColor 0%, $bottomColor 100%);
    background-size: 100% 200%;
    background-position: top;
    transition: background-position 0.3s ease-in-out;
    box-shadow: 0px 8px 8px 0px rgba(0, 0, 0, 0.1);

    @include tablet {
        width: auto;
    }

    &:hover {
        background-position: bottom;
    }
}



@mixin boton-borde($topColor, $bottomColor, $colorTexto) {
    position: relative;
    border: 0.3rem solid $topColor; 
    padding: 1.5rem 4rem; 
    color: $colorTexto; 
    font-size: 2rem; 
    font-weight: 700; 
    text-align: center; 
    display: inline-block; 
    width: 100%; 
    border-radius: 1rem; 
    background: transparent; 
    margin: 2rem 0;
    transition: color 0.3s ease-in-out;
    box-shadow: 0px 8px 8px 0px rgba(0, 0, 0, 0.1);

    @include tablet {
        width: auto; 
    }

    &::before {
        content: "";
        position: absolute;
        inset: 0;
        background: linear-gradient(180deg, $topColor 0%, $bottomColor 100%);
        opacity: 0; 
        transition: opacity 0.3s ease-in-out;
        z-index: -1; 
    }

    &:hover {
        color: color.adjust($colorTexto, $lightness: 100%); 
        cursor: pointer;
    }

    &:hover::before { 
        opacity: 1; 
    }

    &:active {
        background-color: color.adjust($topColor, $lightness: -10%);
    }
}

@mixin grid($columnas, $espaciado ) {
    display: grid;
    gap: $espaciado;
    grid-template-columns: repeat($columnas, 1fr);
}